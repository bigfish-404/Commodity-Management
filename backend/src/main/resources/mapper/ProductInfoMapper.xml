<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.backend.mapper.ProductInfoMapper">

    <resultMap id="ProductInfoResultMap" type="com.example.backend.entity.db.ProductInfoEntity">
        <id property="id" column="ID" />
        <result property="userId" column="USER_ID" />
        <result property="productId" column="PRODUCT_ID" />
        <result property="productName" column="PRODUCT_NAME" />
        <result property="description" column="DESCRIPTION" />
        <result property="createdAt" column="CREATED_AT" />
        <result property="createdBy" column="CREATED_BY" />
        <result property="updatedAt" column="UPDATED_AT" />
        <result property="updatedBy" column="UPDATED_BY" />
        <result property="deletedFlg" column="DELETED_FLG" />
    </resultMap>

    <select id="getAllProductInfo" resultMap="ProductInfoResultMap">
        SELECT *
        FROM COMMODITY_MANAGEMENT.PRODUCT_INFO
        WHERE USER_ID = #{userId}
          AND DELETED_FLG = '0'
        ORDER BY CREATED_AT DESC
    </select>

    <insert id="insertProductInfo" parameterType="com.example.backend.entity.db.ProductInfoEntity">
        INSERT INTO PRODUCT_INFO (
            USER_ID,
            PRODUCT_ID,
            PRODUCT_NAME,
            DESCRIPTION,
            CREATED_BY,
            CREATED_AT,
            UPDATED_BY,
            UPDATED_AT,
            DELETED_FLG
        ) VALUES (
            #{userId, jdbcType=VARCHAR},
            #{productId, jdbcType=VARCHAR},
            #{productName, jdbcType=VARCHAR},
            #{description, jdbcType=VARCHAR},
            #{createdBy, jdbcType=VARCHAR},
            SYSTIMESTAMP,
            #{updatedBy, jdbcType=VARCHAR},
            SYSTIMESTAMP,
            0
        )
    </insert>

    <!-- 更新商品 -->
    <update id="updateProduct" parameterType="com.example.backend.entity.db.ProductInfoEntity">
        UPDATE COMMODITY_MANAGEMENT.PRODUCT_INFO
        SET
            PRODUCT_NAME = #{productName},
            DESCRIPTION = #{description},
            UPDATED_AT = SYSTIMESTAMP,
            UPDATED_BY = #{updatedBy}
        WHERE ID = #{id}
          AND USER_ID = #{userId}
    </update>

    <!-- 删除商品（逻辑删除） -->
    <update id="deleteProduct">
        UPDATE COMMODITY_MANAGEMENT.PRODUCT_INFO
        SET DELETED_FLG = '1',
            UPDATED_AT = SYSTIMESTAMP
        WHERE ID = #{id}
    </update>


</mapper>