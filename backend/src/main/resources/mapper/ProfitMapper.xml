<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.backend.mapper.HomepageMapper">

    <select id="getMonthlyTotal" parameterType="map" resultType="com.example.backend.entity.dto.SalesMonthSummaryDTO">
        SELECT
            NVL(SUM(SALES_PRICE * QUANTITY), 0) AS salesTotal,
            NVL(SUM(PROFIT), 0) AS profitTotal
        FROM
            COMMODITY_MANAGEMENT.PROFIT
        WHERE
            USER_ID = #{userId}
            AND SALES_DATE BETWEEN #{start} AND #{end}
        AND DELETED_FLG = '0'
    </select>

    <!-- 销售与利润的时间维度聚合 -->
    <select id="getSalesSummaryFlexible" resultType="com.example.backend.entity.dto.SalesSummaryDTO">
        SELECT
        <choose>
            <when test="groupFormat == 'day'">
                TO_CHAR(p.SALES_DATE, 'MM-DD') AS label
            </when>
            <when test="groupFormat == 'week'">
                TO_CHAR(TRUNC(p.SALES_DATE, 'IW'), 'MM.DD') || '〜' || TO_CHAR(TRUNC(p.SALES_DATE, 'IW') + 6, 'MM.DD') AS label
            </when>
            <when test="groupFormat == 'month'">
                TO_CHAR(p.SALES_DATE, 'YYYY-MM') AS label
            </when>
            <when test="groupFormat == 'quarter'">
                TO_CHAR(p.SALES_DATE, 'YYYY') || ' Q' || TO_CHAR(p.SALES_DATE, 'Q') AS label
            </when>
            <when test="groupFormat == 'half'">
                TO_CHAR(p.SALES_DATE, 'YYYY') || 
                CASE 
                    WHEN TO_CHAR(p.SALES_DATE, 'MM') BETWEEN '01' AND '06' THEN ' 上半年' 
                    ELSE ' 下半年' 
                END AS label
            </when>
            <when test="groupFormat == 'year'">
                TO_CHAR(p.SALES_DATE, 'YYYY') AS label
            </when>
            <otherwise>
                TO_CHAR(p.SALES_DATE, 'YYYY-MM-DD') AS label
            </otherwise>
        </choose>,
        p.CHANNEL_ID AS channelId,
        c.CHANNEL_NAME AS channelName,
        SUM(p.SALES_PRICE * p.QUANTITY) AS sales,
        SUM(p.PROFIT) AS profit
        FROM COMMODITY_MANAGEMENT.PROFIT p
        LEFT JOIN COMMODITY_MANAGEMENT.CHANNEL c
            ON p.CHANNEL_ID = c.CHANNEL_ID
        WHERE p.USER_ID = #{userId}
          AND p.SALES_DATE &gt;= #{startDate}
          AND p.SALES_DATE &lt;= #{endDate}
          AND p.DELETED_FLG = '0'
        GROUP BY
        <choose>
            <when test="groupFormat == 'day'">
                TO_CHAR(p.SALES_DATE, 'MM-DD'), p.CHANNEL_ID, c.CHANNEL_NAME
            </when>
            <when test="groupFormat == 'week'">
                TRUNC(p.SALES_DATE, 'IW'), p.CHANNEL_ID, c.CHANNEL_NAME
            </when>
            <when test="groupFormat == 'month'">
                TO_CHAR(p.SALES_DATE, 'YYYY-MM'), p.CHANNEL_ID, c.CHANNEL_NAME
            </when>
            <when test="groupFormat == 'quarter'">
                TO_CHAR(p.SALES_DATE, 'YYYY'), TO_CHAR(p.SALES_DATE, 'Q'), p.CHANNEL_ID, c.CHANNEL_NAME
            </when>
            <when test="groupFormat == 'half'">
                TO_CHAR(p.SALES_DATE, 'YYYY'), 
                CASE 
                    WHEN TO_CHAR(p.SALES_DATE, 'MM') BETWEEN '01' AND '06' THEN '1' 
                    ELSE '2' 
                END, p.CHANNEL_ID, c.CHANNEL_NAME
            </when>
            <when test="groupFormat == 'year'">
                TO_CHAR(p.SALES_DATE, 'YYYY'), p.CHANNEL_ID, c.CHANNEL_NAME
            </when>
            <otherwise>
                TO_CHAR(p.SALES_DATE, 'YYYY-MM-DD'), p.CHANNEL_ID, c.CHANNEL_NAME
            </otherwise>
        </choose>
        ORDER BY label
    </select>

    <!-- 渠道总销售/利润比例 -->
    <select id="getChannelRatioSummary" resultType="com.example.backend.entity.dto.ChannelRatioSummaryDTO">
        SELECT
            c.CHANNEL_ID AS channelId,
            c.CHANNEL_NAME AS channelName,
            NVL(SUM(p.SALES_PRICE * p.QUANTITY), 0) AS sales,
            NVL(SUM(p.PROFIT), 0) AS profit
        FROM COMMODITY_MANAGEMENT.CHANNEL c
        LEFT JOIN COMMODITY_MANAGEMENT.PROFIT p 
            ON p.CHANNEL_ID = c.CHANNEL_ID
            AND p.USER_ID = #{userId}
            AND p.DELETED_FLG = '0'
            AND p.SALES_DATE &gt;= #{startDate}
            AND p.SALES_DATE &lt;= #{endDate}
        WHERE c.USER_ID = #{userId}
          AND c.DELETED_FLG = '0'
        GROUP BY c.CHANNEL_ID, c.CHANNEL_NAME
        ORDER BY sales DESC
    </select>

</mapper>
